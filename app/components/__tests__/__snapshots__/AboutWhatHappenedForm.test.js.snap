// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AboutWhatHappenedForm renders correctly 1`] = `
<ForwardRef(View)>
  <Input
    navigation={
      Object {
        "navigate": [Function],
      }
    }
    onValueChange={[Function]}
    placeScreenTitle="Informe a Empresa"
    placeholder="Empresa em que ocorreu"
    required={true}
    showValidation={false}
    types={
      Array [
        "establishment",
      ]
    }
  />
  <Input
    items={
      Array [
        Object {
          "label": "Assédio Físico",
          "value": "physical",
        },
        Object {
          "label": "Assédio Verbal",
          "value": "verbal",
        },
        Object {
          "label": "Homofobia",
          "value": "homophobia",
        },
        Object {
          "label": "Racismo",
          "value": "racism",
        },
        Object {
          "label": "Transfobia",
          "value": "transfobia",
        },
        Object {
          "label": "Outro tipo de Assédio",
          "value": "other",
        },
      ]
    }
    onValueChange={[Function]}
    placeholder="Tipo de assédio"
    required={true}
    showValidation={false}
    value=""
  />
  <Input
    multiline={true}
    onValueChange={[Function]}
    placeholder="Conte-nos mais sobre o ocorrido"
    required={true}
    showValidation={false}
    value=""
  />
  <Input
    maxDate={1970-01-18T14:58:09.340Z}
    onValueChange={[Function]}
    placeholder="Quando ocorreu"
    required={true}
    showValidation={false}
    value={null}
  />
  <Input
    label="Você tomou alguma providência com relação ao ocorrido?"
    onValueChange={[Function]}
    options={
      Array [
        Object {
          "key": "talkedToAccountable",
          "label": "Falei com algum Responsável (RH, Superior direto, etc)",
        },
        Object {
          "key": "gaveFeedback",
          "label": "Dei o feedback para o envolvido",
        },
        Object {
          "key": "policeReport",
          "label": "Fiz um Boletim de Ocorrência",
        },
      ]
    }
    required={false}
    showValidation={false}
    values={Array []}
  />
  <Input
    items={
      Array [
        Object {
          "label": "Sim",
          "value": "yes",
        },
        Object {
          "label": "Não",
          "value": "no",
        },
        Object {
          "label": "Prefiro não responder",
          "value": "notInformed",
        },
      ]
    }
    onValueChange={[Function]}
    placeholder="Você recomendaria essa empresa depois do ocorrido?"
    required={true}
    showValidation={false}
    value=""
  />
  <Input
    autoGrow={true}
    maxLength={350}
    multiline={true}
    onValueChange={[Function]}
    placeholder="Qual seu conselho para os gestores?"
    required={false}
    showValidation={false}
    style={
      Array [
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#fcfcfc",
          "borderRadius": 5,
          "borderWidth": 0,
          "height": 30,
          "margin": 0,
          "marginBottom": 10,
          "marginTop": 10,
          "padding": 5,
        },
        Object {
          "height": "auto",
          "minHeight": 30,
        },
      ]
    }
    value=""
  />
  <Button
    onPress={[Function]}
    title="Prosseguir"
    type="confirm"
  />
</ForwardRef(View)>
`;
